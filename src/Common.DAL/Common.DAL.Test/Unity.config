<?xml version="1.0" encoding="utf-8" ?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

  <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration"/>

  <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />

  <alias alias="LogPerformanceDataBehavior" type="Common.Utility.Unity.LogPerformanceDataBehavior, Common.Utility.Unity" />
  
  <alias alias="IDataManager`2" type="Common.DAL.Contract.IDataManager`2, Common.DAL.Contract"/>
  <alias alias="ISqlDataManager" type="Common.DAL.Contract.ISqlDataManager, Common.DAL.Contract"/>
  
  <alias alias="DataManager`2" type="Common.DAL.NHibernate.DataManager`2, Common.DAL.NHibernate"/>
  <alias alias="SqlDataManager" type="Common.DAL.FoxPro.SqlDataManager, Common.DAL.FoxPro"/>

  <alias alias="StateBase" type="Common.DAL.Test.Domain.StateBase, Common.DAL.Test.Domain"/>
  <alias alias="State" type="Common.DAL.Test.Domain.Default.State, Common.DAL.Test.Domain.Default"/>

  <alias alias="DescriptionBase" type="Common.Domain.DescriptionBase, Common.Domain"/>
  <alias alias="Description" type="Common.Domain.Default.Description, Common.Domain.Default"/>
  
  <container>
    <extension type="Interception" />
    
    <types>
      
      <type type="IDataManager`2" mapTo="DataManager`2">
        <lifetime  type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor"/>
        <interceptionBehavior type="LogPerformanceDataBehavior"/>
      </type> 
      
      <type type="ISqlDataManager" mapTo="SqlDataManager">
        <lifetime  type="ContainerControlledLifetimeManager" />
        <interceptor type="InterfaceInterceptor"/>
        <interceptionBehavior type="LogPerformanceDataBehavior"/>
      </type> 
      
      <type type="StateBase" mapTo="State" />
      <type type="DescriptionBase" mapTo="Description" />
      
    </types>

    <interception>

      <policy name="traceMethod">
        <matchingRule name="MemberNameMatch" type="MemberNameMatchingRule">
          <constructor>
            <param name="nameToMatch">
              <value
                value="*"
                typeConverter="System.ComponentModel.StringConverter, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            </param>
          </constructor>
        </matchingRule>
        <callHandler name="TraceCallHandler" type="Common.Utility.Unity.TraceCallHandler, Common.Utility.Unity"/>
      </policy>

      <policy name="logPolicy">
        <matchingRule name="customAttribute" type="CustomAttributeMatchingRule">
          <constructor>
            <param name="attributeType" type="System.Type, mscorlib">
              <value value= "Common.Utility.Unity.LogAttribute, Common.Utility"
                     typeConverter="Common.Utility.Unity.GetTypeConverter, Common.Utility.Unity"/>
            </param>
            <param name="inherited" type="bool">
              <value value="true" />
            </param>
          </constructor>
        </matchingRule>
        <callHandler name="MyValidator" type="Common.Utility.Unity.LogCallHandler, Common.Utility.Unity">
          <lifetime type="transient"/>
        </callHandler>
      </policy>

    </interception>
  </container>
</unity>

